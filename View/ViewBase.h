////////////////////////////////////////////////////////////////////////////////
//
/**
\file
\brief Объявление интерфейса ViewBase
*/
//
////////////////////////////////////////////////////////////////////////////////

#pragma once

#include "IObserver.h"
#include "../View/IPainter.h"
namespace view
{

  ////////////////////////////////////////////////////////////////////////////////
  //
  /// Структура для хранения объекта отрисовки
  /**
  */
  ////////////////////////////////////////////////////////////////////////////////
  struct DrawData
  {
    PrimitiveSPtr prim; /// < указатель на примитив
    QColor color; /// < параметр цвета
    unsigned int width;   /// < толщина
  };
  ////////////////////////////////////////////////////////////////////////////////
  //
  /// Интерфейс для представления объектов: моделей, фантомов
  /**
  */
  ////////////////////////////////////////////////////////////////////////////////
  class ViewBase : public IObserver
  {
  public:
    /// Деструктор
    virtual ~ViewBase() = default;
    /// Метод получения вектора объектов отрисовки
    virtual std::vector<DrawData> GetDrawData() = 0;
    /// Метод отрисовки
    void Draw(view::IPainter& painter);
  };
} //namespace view